name: Deployment Workflow # Automatic deployment workflow

on:
  push:
    branches:
      - main  # Run on pushes to the main branch
      
jobs:
  deploy:
    runs-on: macos-latest      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" >> ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H github.com >> ~/.ssh/known_hosts

      - name: Test SSH connection
        run: |
          ssh -T git@github.com
          echo "This should end with exit status 1 dont worry about it"
        continue-on-error: true

      - name: Cached dependencies
        uses: actions/cache@v4
        with:
          # See here for caching with `yarn` https://github.com/actions/cache/blob/main/examples.md#node---yarn or you can leverage caching with actions/setup-node https://github.com/actions/setup-node
          path: |
            ~/.npm
            ${{ github.workspace }}/.next/cache
          # Generate a new cache whenever packages or source files change.
          key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-${{ hashFiles('**/*.js', '**/*.jsx', '**/*.ts', '**/*.tsx') }}
          # If source files changed but packages didn't, rebuild from a prior cache.
          restore-keys: |
            ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json') }}-
    
      - name: Install dependencies
        run: npm install
        working-directory: personal-webpage-2

      - name: Deploy
        # Deploy runs all preceeding commands, like build, lint, test etc
        run: |
          echo "ACCESS_TOKEN_GH=${{ secrets.ACCESS_TOKEN_GH }}" >> .env.local
          npm run deploy
        working-directory: personal-webpage-2
